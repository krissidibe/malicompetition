// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  author       User     @relation(fields: [authorId], references: [id])
  authorId     String
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  emailVerified Boolean       @default(false)
  firstName     String
  lastName      String
  number        String
  birthDate     DateTime?     @db.Date
  sexe          String
  password      String
  role          UserRole      @default(USER)
  createdAt     DateTime?     @default(now()) @db.Timestamp(0)
  updatedAt     DateTime?     @db.Date
  candidatures  Candidature[]
  accounts      Account[]
  sessions      Session[]
}

model Competition {
  id        String    @id @default(cuid())
  image     String?
  title     String
  content   String?   @db.LongText
  statut    String
  ageMin    Int?
  ageMax    Int?
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  updatedAt DateTime? @db.Date

  startDateAt  DateTime      @db.Date
  endDateAt    DateTime      @db.Date
  candidatures Candidature[]
}

enum UserRole {
  ADMIN
  USER
}

model Candidature {
  id                  String  @id @default(cuid())
  title               String
  content             String? @db.LongText
  statut              String
   firstName  String
   lastName  String
   birthDate DateTime @db.Date 
   sexe String
  nina                String
  certificat          String
  diplome             String
  diplomeNumber       String
  placeOfGraduation   String
  countryOfGraduation String
  study               String
  speciality          String
  def                 String?
  bac                 String?
  licence             String?
  master              String?

  endDateAt     DateTime?   @db.Date
  createdAt     DateTime?   @default(now()) @db.Timestamp(0)
  updatedAt     DateTime?   @db.Date
  author        User        @relation(fields: [authorId], references: [id])
  authorId      String
  competition   Competition @relation(fields: [competitionId], references: [id])
  competitionId String
}
